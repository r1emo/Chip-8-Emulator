#include "headers/chip8.h"

// credit Laurence Muller for fontset("https://multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/"")
unsigned char chip8_fontset[80] =
{ 
  0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
  0x20, 0x60, 0x20, 0x20, 0x70, // 1
  0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
  0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
  0x90, 0x90, 0xF0, 0x10, 0x10, // 4
  0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
  0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
  0xF0, 0x10, 0x20, 0x40, 0x40, // 7
  0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
  0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
  0xF0, 0x90, 0xF0, 0x90, 0x90, // A
  0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
  0xF0, 0x80, 0x80, 0x80, 0xF0, // C
  0xE0, 0x90, 0x90, 0x90, 0xE0, // D
  0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
  0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};

void chip8::initiatize()
{
  pc = 0x200;
  opcode = 0;
  iReg = 0;
  sp = 0;

  // clear display
  for (int ii = 0; ii < (64*32); ii++)
    gfx[ii] = 0;

  // clear registers v0-vF
  for (int ii = 0; ii < 16; ii++)
    vReg[ii] = 0;

  for (int ii = 0; ii < 4096; ii++)
    memory[ii] = 0;
  
  // load fontset
  for (int ii = 0; ii < 80; ii++)
    memory[ii] = chip8_fontset[ii];

  // TODO: reset timers
}

int chip8::loadGame(std::string fileName)
{
  int ret = -1;

  // TODO: use fopen in binary mode to read rom

  return ret;
}